;***************************************************************************
;
;	    Filename: Eslave.ASM
;	    Date: 11/05/2024
;	    File Version: 1
;	    Author: Owen Fujii
;	    Company: Idaho State University
;	    Description: A Program for a slave I2C device that plays notes on the
;			    E string of a Bass guitar
;**************************************************************************
	
;*************************************************************************
; 
;	    Revision History:
;   
;	    Modified as listed
;	    Started 11/05/2024
;
;*************************************************************************
    
    ; PIC16F1788 Configuration Bit Settings

; Assembly source line config statements

	#include "p16f1789.inc"
	#INCLUDE <ESlaveSetup.inc>
	#INCLUDE <ESlavePOPout.inc>
	#INCLUDE <ESlavePUSHin.inc>
	#INCLUDE <StepperDrive.inc>

; CONFIG1
; __config 0xE9A4
 __CONFIG _CONFIG1, _FOSC_INTOSC & _WDTE_OFF & _PWRTE_OFF & _MCLRE_OFF & _CP_OFF & _CPD_OFF & _BOREN_OFF & _CLKOUTEN_ON & _IESO_OFF & _FCMEN_ON
; CONFIG2
; __config 0xDFFF
 __CONFIG _CONFIG2, _WRT_OFF & _VCAPEN_OFF & _PLLEN_ON & _STVREN_ON & _BORV_LO & _LPBOR_OFF & _LVP_OFF

 
 ;*********************
 ;Define Constants
 ;*********************
 
        PITCH	    EQU H'022'
	BUFFER	    EQU H'041'
	DISABLE	    EQU H'042'
; SET STORAGE REGISTERS FOR EACH NOTE AND ITS MIDI VALUES
	TEMP	    EQU H'023'
	F1MIDI	    EQU H'024'
	FS1MIDI	    EQU H'025'
	G1MIDI	    EQU H'026'
	GS1MIDI	    EQU H'027'
	A1MIDI	    EQU H'028'
	AS1MIDI	    EQU H'029'
	B1MIDI	    EQU H'030'
	C2MIDI	    EQU H'031'
	CS2MIDI	    EQU H'032'
	D2MIDI	    EQU H'033'
	DS2MIDI	    EQU H'034'
	E2MIDI	    EQU H'035'
	F2MIDI	    EQU H'036'
	FS2MIDI	    EQU H'037'
	G2MIDI	    EQU H'038'
	GS2MIDI	    EQU H'039'
	A2MIDI	    EQU H'040'
	AS2MIDI	    EQU H'041'
	B2MIDI	    EQU H'042'
	C3MIDI	    EQU H'043'
; SET STEPPER MOTOR STEP REGISTERS
	STEPBYTE1   EQU H'060'
	STEPBYTE2   EQU H'061'
	STEPBYTE3   EQU H'062'
	STEPBYTE4   EQU H'063'
; RESERVED REGISTERS FOR STEPPER INCLUDE
;	HIGHOFFSET  EQU H'064'
;	MIDOFFSET   EQU H'065'
;	LOWOFFSET   EQU H'066'
;***** GPR'S FOR POSITION TRACKING ****
	CURRENTPTH   EQU H'046'
	CURRENTPTL   EQU H'047'
	NEXTPTH	     EQU H'049'
	NEXTPTL	     EQU H'050'     
	  
	

    ORG H'000'					
    GOTO SETUP					;RESET CONDITION GOTO SETUP
    ORG H'004'
    GOTO INTER

HIGHTABLE
    ADDWF PCL,1	    ; HIGH BYTE FOR NOTE POSITION
    RETLW H'001'    ; STARTS AT F1
    RETLW H'001'    ; F#1
    RETLW H'001'    ; G1
    RETLW H'001'    ; G#1
    RETLW H'001'    ; A1
    RETLW H'001'    ; A#1
    RETLW H'001'    ; B1
    RETLW H'001'    ; C2
    RETLW H'001'    ; C#2
    RETLW H'001'    ; D2
    RETLW H'001'    ; D#2
    RETLW H'001'    ; E2
    RETLW H'001'    ; F2
    RETLW H'001'    ; F#2
    RETLW H'001'    ; G2
    RETLW H'001'    ; G#2
    RETLW H'001'    ; A2
    RETLW H'001'    ; A#2
    RETLW H'001'    ; B2
    RETLW H'001'    ; C3
    
    
LOWTABLE
    ADDWF PCL,1	    ; LOW BYTE FOR NOTE POSITION
    RETLW H'008'    ; STARTS AT F1
    RETLW H'00F'    ; F#1
    RETLW H'018'    ; G1
    RETLW H'01F'    ; G#1
    RETLW H'028'    ; A1
    RETLW H'02F'    ; A#1
    RETLW H'038'    ; B1
    RETLW H'03F'    ; C2
    RETLW H'048'    ; C#2
    RETLW H'04F'    ; D2
    RETLW H'058'    ; D#2
    RETLW H'05F'    ; E2
    RETLW H'068'    ; F2
    RETLW H'06F'    ; F#2
    RETLW H'078'    ; G2
    RETLW H'07F'    ; G#2
    RETLW H'080'    ; A2
    RETLW H'088'    ; A#2
    RETLW H'08F'    ; B2
    RETLW H'098'    ; C3
    
    
    
    
SETUP
    BANKSEL OSCCON
    MOVLW H'07B'	    ; SET 8MHZ INTERNAL OSSCILATOR
    MOVWF OSCCON
    BANKSEL OSCSTAT
    BTFSC OSCSTAT,OSTS	    ; WAIT FOR OSSCILATOR TO BE READY
    GOTO $-1
    CALL START		    ; CALL SETUP INCLUDE
    ; SET UP I2C AS SLAVE
    BANKSEL SSP1CON1
    MOVLW H'036'	    ; SET 7 BIT SLAVE I2C
    MOVWF SSP1CON1
    BANKSEL SSP1ADD
    MOVLW H'002'	    ; SET SLAVE ADDRESS A 0X01
    MOVWF SSP1ADD
    BANKSEL SSP1CON2
    CLRF SSP1CON2
    BSF SSP1CON2,SEN	    ; ENABLE CLOCK STRETCH
    BANKSEL SSP1CON3
    CLRF SSP1CON3
    BSF SSP1CON3,AHEN	    ; ENABLE CLOCK STRETCH FOR ADDRESS AND DATA
    BSF SSP1CON3,DHEN
    ; CONFIGURE PORT PINS
    BANKSEL APFCON1
    CLRF APFCON1	    ; SET PORTS
    BANKSEL APFCON2
    CLRF APFCON2	    ; SET PORTS
    ; STEPPER REGISTERS
    CLRF STEPBYTE4
    CLRF STEPBYTE3
    CLRF STEPBYTE2
    CLRF STEPBYTE1
    ; SET DEFAULT POSITION F1
    MOVLW H'001'
    MOVWF CURRENTPTH
    MOVWF STEPBYTE2
    MOVLW H'008'
    MOVWF CURRENTPTL
    MOVWF STEPBYTE1
    CALL DRIVE
    ; ENABLE INTERRUPTS
    BANKSEL PIE1
    BSF PIE1,SSP1IE
    BSF INTCON,GIE	    ; ENABLE INTERRUPTS
    BSF INTCON,PEIE
    BANKSEL PORTA
    BSF PORTA,0		    ; SET STATUS FLAG
    GOTO MAIN

MAIN
    NOP
    BTFSS BUFFER,1
    GOTO MAIN
    ; 
    BTFSS PITCH,7
    GOTO RELEASE	; IF CLEAR RELEASE NOTE
    BCF PITCH,7
    MOVLW H'01C'	; SUBTRACT 28 FROM PITCH
    SUBWF PITCH,0
    BTFSC STATUS,Z	; IF NOTE IS E1 DO NOT FRET NOTE
    GOTO RELEASE
    CALL HIGHTABLE
    MOVWF NEXTPTH
    MOVLW H'01C'	; SUBTRACT 28 FROM PITCH
    SUBWF PITCH,0
    CALL LOWTABLE
    MOVWF NEXTPTL
    CALL CALCSTEP	; CALCULATE AND EXECUTE STEPS
    CLRF BUFFER
    CLRF PITCH
    GOTO MAIN

RELEASE
    BANKSEL PORTA
    BCF PORTA,4		; CLEAR MASTER HOLD FLAG
    BCF PORTA,5		; DE ENERGIZE SOLENOID
    CLRF BUFFER
    CLRF PITCH
    GOTO MAIN

STOP
    BANKSEL SSP1CON1
    BCF SSP1CON1,SSPEN
    NOP
    NOP
    BSF SSP1CON1,SSPEN
    RETURN
    
   
CALCSTEP  ; CALCULATE THE STEPS THAT ARE NEED TO MOVE TO THE NEXT POSITION 
   MOVFW NEXTPTH
   SUBWF CURRENTPTH,0
   BTFSC STATUS,Z
   GOTO EVALLOW		    ; UPPER BYTES ARE EQUAL CHECK LOWER BYTES
   BTFSC STATUS,C	    ; IF RESULT IS POSITIVE CURRENT IS GREATER THAN 
   GOTO STEPBACKH	    ; THE NEXT POSITION IS BEHIND CURRENT
   GOTO STEPFORWARDH	    ; IF RESULT IS NEGATIVE MOVE BACK
   
EVALLOW
   MOVFW NEXTPTL
   SUBWF CURRENTPTL,0
   BTFSC STATUS,Z
   GOTO FIRE		    ; CURRENT POSITION IS SAME AS LAST
   BTFSC STATUS,C
   GOTO STEPBACK	    ; IF UPPER BYTES ARE EQUAL THE UPPER
   GOTO STEPFORWARD	    ; BYTE DOES NOT NEED TO BE SET. 
   
STEPFORWARDH
   BSF PORTB,4		    ; SET STEPPER TO CLOCKWISE ROTATION
   MOVFW CURRENTPTH
   SUBWF NEXTPTH,0
   MOVWF STEPBYTE2	    ; SET STEPS FOR HIGH BYTE
   MOVFW CURRENTPTL
   SUBWF NEXTPTL,0
   MOVWF STEPBYTE1	    ; SET STEPS FOR LOW BYTE
   ;
   GOTO FIRE
   
STEPBACKH
   BCF PORTB,4		    ; SET STEPPER FOR COUNTER CLOCKWISE ROTATION
   MOVFW NEXTPTH
   SUBWF CURRENTPTH,0
   MOVWF STEPBYTE2	    ; SET STEPS FOR HIGH BYTE
   MOVFW NEXTPTL
   SUBWF CURRENTPTL,0
   MOVWF STEPBYTE1	    ; SET STEPS FOR LOW BYTE
   ;
   GOTO FIRE
   
STEPFORWARD
   BSF PORTB,4
   MOVFW CURRENTPTL
   SUBWF NEXTPTL,0
   MOVWF STEPBYTE1	    ; SET STEPS FOR LOW BYTE
   GOTO FIRE
   
STEPBACK
   BCF PORTB,4
   MOVFW NEXTPTL
   SUBWF CURRENTPTL,0
   MOVWF STEPBYTE1	    ; SET STEPS FOR LOW BYTE
   GOTO FIRE
   
FIRE
   MOVWF CURRENTPTL	    ; STORE CURRENT POINT
   MOVFW NEXTPTH
   MOVWF CURRENTPTH
   MOVFW NEXTPTL
   MOVWF CURRENTPTL
   CALL DRIVE
   BANKSEL PORTA
   BSF PORTA,5		    ; FIRE SOLENOID
   BCF PORTA,4		    ; CLEAR FLAG TO ALLOW MASTER TO CONTINUE
   RETURN		
    
INTER
    BANKSEL INTCON
    CLRF INTCON		    ; CLEAR INTERRUPTS
    CALL PUSHIN		    ; SAFE STATUS
    BANKSEL PIR1
    BTFSC PIR1,SSP1IF	    ; CHECK MSSP INTERRUPT FLAG
    CALL RECIEVE	
    BANKSEL INTCON
    BSF INTCON,GIE	    ; RE-ENABLE INTERRUPTS
    BSF INTCON,PEIE
    CALL POPOUT		    ; RETURN STATUS'S
    RETFIE
    
RECIEVE
    BANKSEL PIR1
    CLRF PIR1		; CLEAR FLAG
    BSF PORTA,4
    BANKSEL SSP1BUF 
    MOVF SSP1BUF,0	; READ RECIEVED DATA
    BANKSEL PORTB
    BTFSS BUFFER,0
    GOTO $+2		; DO NOT WRITE IF THIS IS ADDRESS
    MOVWF PITCH		; MOVE INTO GPR
    BSF BUFFER,1
    BSF BUFFER,0
    BANKSEL SSP1CON1	
    BSF SSP1CON1,CKP	; RELEASE CLOCK LINE
    RETURN
    
    

END


